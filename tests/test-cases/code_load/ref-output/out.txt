
gadget:     file format elf64-x86-64


Disassembly of section .text:

0000000004000000 <code_load>:
 4000000:	49 83 f8 00          	cmp    r8,0x0
 4000004:	74 0c                	je     4000012 <trans1>

0000000004000006 <trans0>:
 4000006:	48 0f b7 37          	movzx  rsi,WORD PTR [rdi]
 400000a:	48 89 d0             	mov    rax,rdx
 400000d:	48 01 f0             	add    rax,rsi
 4000010:	ff e0                	jmp    rax

0000000004000012 <trans1>:
 4000012:	48 8b 07             	mov    rax,QWORD PTR [rdi]
 4000015:	ff e0                	jmp    rax

0000000004000017 <end>:
 4000017:	e9 00 00 00 00       	jmp    400001c <end+0x5>

== SCANNER ==
[MAIN]  Loading angr project...
[MAIN]  Removing non-writable memory...
[MAIN]  Analyzing gadget at address 0x4000000...
[MAIN]  Found 2 potential transmissions.
[MAIN]  Found 2 tainted function pointers.
[MAIN]  Extracted 2 transmissions.
[MAIN]  --------------- ANALYZING TRANSMISSIONS ------------------
[MAIN]  Analyzing <BV64 rdx + (0#48 .. LOAD_16[<BV64 rdi>]_20)>...
[MAIN]  Dumped annotated ASM to asm
[MAIN]  Dumped properties to gadgets.csv
[MAIN]  Analyzing <BV64 LOAD_64[<BV64 rdi>]_21>...
[MAIN]  Dumped annotated ASM to asm
[MAIN]  Dumped properties to gadgets.csv
[MAIN]  --------------- ANALYZING TFPs ------------------
[MAIN]  Extracted 2 tfps.
[MAIN]  Dumped annotated ASM to asm
[MAIN]  Dumped CSV to tfp.csv
[MAIN]  Dumped annotated ASM to asm
[MAIN]  Dumped CSV to tfp.csv

== REASONER ==
/home/wiebingsj/code/inspectre-gadget/reasoner/reasoner.py:600: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df[['exploitable_w_slam', 'required_solutions_w_slam',
[-] Imported 2 gadgets
[-] Performing exploitability analysis...
Found 1 exploitable gadgets!
[-] Performing exploitability analysis including branch constraints...
Found 1 exploitable gadgets!
[-] Performing exploitability analysis assuming the SLAM covert channel...
Found 2 exploitable gadgets!
[-] Saving to gadgets-reasoned.csv
[-] Done!
